
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftPLUSMINUSleftMULDIVMODAND ASSIGN BOOLEAN CHRLIT CLOSEBRACE CLOSECURLY CLOSEPAR COMMA COMMENT DBLLIT DIV EQ FLTLIT GEQ GT INTLIT LEQ LT MINUS MOD MUL NEQ NOT OPENBRACE OPENCURLY OPENPAR OR PLUS QUOTATION STRLIT TILDE UNDERSCORE VAR avisar clase comienzo es explicar fin fin_explicar hacer imprimir introducir mientras otro para regresso romperse si tratar\n        main_program : comienzo OPENCURLY statements CLOSECURLY fin\n                     | comienzo classes fin\n                     | comienzo function_heading fin                    \n    \n        statements  : identifier_list EQ expression\n                    | introducir type\n                    | imprimir OPENPAR identifier_list CLOSEPAR\n                    | imprimir QUOTATION identifier_list QUOTATION\n                    | regresso OPENPAR expression_list CLOSEPAR\n                    | si OPENPAR expression_list CLOSEPAR otro statements\n                    | optional_statements\n                    | if \n                    | while \n                    | COMMENT\n    statements : imprimir OPENPAR expression CLOSEPARstatements : imprimir OPENPAR STRLIT CLOSEPARstatements : VAR ASSIGN expression imprimir OPENPAR VAR CLOSEPARstatements : VAR ASSIGN STRLIT imprimir OPENPAR VAR CLOSEPAR\n        identifier_list : CHRLIT identifier_list\n                        | STRLIT identifier_list\n                        | INTLIT identifier_list\n                        | UNDERSCORE\n                        | empty\n    \n        empty : \n    \n        expression  : expression\n                    | expression_list COMMA expression\n                    | identifier_list\n    \n        expression_list : logical_expression\n                        |  arithmetic_expression\n    \n        logical_expression  : expression '<' expression \n                            | expression '>' expression\n                            | expression LT expression\n                            | expression GT expression\n                            | expression '=' expression\n                            | expression NEQ expression\n                            | expression EQ expression\n                            | expression '!' expression\n                            | expression OR expression\n                            | expression AND expression\n                            | NOT expression\n    \n        arithmetic_expression : expression '+' expression\n                              |  expression '-' expression\n                              |  expression '*' expression\n                              |  expression '/' expression\n                              |  expression '%' expression\n    \n        type : INTLIT identifier_list TILDE\n             | FLTLIT identifier_list TILDE \n             | DBLLIT identifier_list TILDE \n             | CHRLIT identifier_list TILDE \n             | STRLIT identifier_list TILDE \n    \n        optional_statements : statement_list\n                            | empty \n    \n        statement_list : statements\n                       | statement_list statements \n\n    \n        if  : si OPENPAR expression_list CLOSEPAR statements\n            | si OPENPAR expression_list CLOSEPAR statements else_if\n    \n        else_if : otro OPENPAR expression CLOSEPAR statements else_if\n                | empty\n    \n        while : mientras OPENPAR expression_list CLOSEPAR TILDE optional_statements TILDE\n              | mientras OPENPAR expression_list CLOSEPAR TILDE optional_statements TILDE romperse\n    \n        classes : clase OPENCURLY identifier_list optional_statements CLOSECURLY\n    \n        function_heading : explicar OPENPAR parameters TILDE CLOSEPAR\n    \n        parameters : type\n                   | type COMMA parameters\n                   | empty\n    "
    
_lr_action_items = {'comienzo':([0,],[2,]),'$end':([1,26,27,53,],[0,-2,-3,-1,]),'OPENCURLY':([2,6,],[3,28,]),'clase':([2,],[6,]),'explicar':([2,],[7,]),'introducir':([3,8,14,15,16,17,18,20,21,22,23,24,28,31,32,42,43,45,46,47,49,54,55,75,76,77,95,97,98,99,100,101,102,103,104,105,106,107,129,130,131,134,135,136,138,141,143,144,145,147,148,149,150,],[10,-52,-10,-11,-12,-13,-23,-23,-23,-21,-51,10,-23,-23,-5,-19,-22,-18,-20,-52,10,-26,-4,-10,-51,-52,-23,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,10,-24,10,-23,10,-9,-55,-57,-10,-16,-17,-58,-59,10,-23,-56,]),'imprimir':([3,8,14,15,16,17,18,20,21,22,23,24,28,31,32,42,43,44,45,46,47,49,54,55,72,73,75,76,77,95,97,98,99,100,101,102,103,104,105,106,107,129,130,131,134,135,136,138,141,143,144,145,147,148,149,150,],[11,-52,-10,-11,-12,-13,-23,-23,-23,-21,-51,11,-23,-23,-5,-19,-22,-23,-18,-20,-52,11,-26,-4,108,109,-10,-51,-52,-23,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,11,-24,11,-23,11,-9,-55,-57,-10,-16,-17,-58,-59,11,-23,-56,]),'regresso':([3,8,14,15,16,17,18,20,21,22,23,24,28,31,32,42,43,45,46,47,49,54,55,75,76,77,95,97,98,99,100,101,102,103,104,105,106,107,129,130,131,134,135,136,138,141,143,144,145,147,148,149,150,],[12,-52,-10,-11,-12,-13,-23,-23,-23,-21,-51,12,-23,-23,-5,-19,-22,-18,-20,-52,12,-26,-4,-10,-51,-52,-23,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,12,-24,12,-23,12,-9,-55,-57,-10,-16,-17,-58,-59,12,-23,-56,]),'si':([3,8,14,15,16,17,18,20,21,22,23,24,28,31,32,42,43,45,46,47,49,54,55,75,76,77,95,97,98,99,100,101,102,103,104,105,106,107,129,130,131,134,135,136,138,141,143,144,145,147,148,149,150,],[13,-52,-10,-11,-12,-13,-23,-23,-23,-21,-51,13,-23,-23,-5,-19,-22,-18,-20,-52,13,-26,-4,-10,-51,-52,-23,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,13,-24,13,-23,13,-9,-55,-57,-10,-16,-17,-58,-59,13,-23,-56,]),'COMMENT':([3,8,14,15,16,17,18,20,21,22,23,24,28,31,32,42,43,45,46,47,49,54,55,75,76,77,95,97,98,99,100,101,102,103,104,105,106,107,129,130,131,134,135,136,138,141,143,144,145,147,148,149,150,],[17,-52,-10,-11,-12,-13,-23,-23,-23,-21,-51,17,-23,-23,-5,-19,-22,-18,-20,-52,17,-26,-4,-10,-51,-52,-23,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,17,-24,17,-23,17,-9,-55,-57,-10,-16,-17,-58,-59,17,-23,-56,]),'VAR':([3,8,14,15,16,17,18,20,21,22,23,24,28,31,32,42,43,45,46,47,49,54,55,75,76,77,95,97,98,99,100,101,102,103,104,105,106,107,129,130,131,132,133,134,135,136,138,141,143,144,145,147,148,149,150,],[19,-52,-10,-11,-12,-13,-23,-23,-23,-21,-51,19,-23,-23,-5,-19,-22,-18,-20,-52,19,-26,-4,-10,-51,-52,-23,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,19,-24,19,-23,139,140,19,-9,-55,-57,-10,-16,-17,-58,-59,19,-23,-56,]),'CHRLIT':([3,8,10,14,15,16,17,18,20,21,22,23,24,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,59,67,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,129,130,131,134,135,136,138,141,142,143,144,145,147,148,149,150,],[20,-52,36,-10,-11,-12,-13,20,20,20,-21,-51,20,20,36,20,-5,20,20,20,20,20,20,20,20,20,-19,-22,20,-18,-20,-52,20,20,-26,-4,20,20,20,-10,-51,-52,36,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,20,-24,20,-23,20,-9,-55,-57,-10,20,-16,-17,-58,-59,20,-23,-56,]),'STRLIT':([3,8,10,14,15,16,17,18,20,21,22,23,24,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,59,67,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,129,130,131,134,135,136,138,141,142,143,144,145,147,148,149,150,],[18,-52,37,-10,-11,-12,-13,18,18,18,-21,-51,18,18,37,18,-5,18,18,18,18,18,67,18,18,18,-19,-22,73,-18,-20,-52,18,18,-26,-4,18,18,18,-10,-51,-52,37,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,18,-24,18,-23,18,-9,-55,-57,-10,18,-16,-17,-58,-59,18,-23,-56,]),'INTLIT':([3,8,10,14,15,16,17,18,20,21,22,23,24,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,59,67,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,129,130,131,134,135,136,138,141,142,143,144,145,147,148,149,150,],[21,-52,33,-10,-11,-12,-13,21,21,21,-21,-51,21,21,33,21,-5,21,21,21,21,21,21,21,21,21,-19,-22,21,-18,-20,-52,21,21,-26,-4,21,21,21,-10,-51,-52,33,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,21,-24,21,-23,21,-9,-55,-57,-10,21,-16,-17,-58,-59,21,-23,-56,]),'UNDERSCORE':([3,8,14,15,16,17,18,20,21,22,23,24,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,59,67,73,75,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,129,130,131,134,135,136,138,141,142,143,144,145,147,148,149,150,],[22,-52,-10,-11,-12,-13,22,22,22,-21,-51,22,22,22,-5,22,22,22,22,22,22,22,22,22,-19,-22,22,-18,-20,-52,22,22,-26,-4,22,22,22,-10,-51,-52,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,22,-24,22,-23,22,-9,-55,-57,-10,22,-16,-17,-58,-59,22,-23,-56,]),'mientras':([3,8,14,15,16,17,18,20,21,22,23,24,28,31,32,42,43,45,46,47,49,54,55,75,76,77,95,97,98,99,100,101,102,103,104,105,106,107,129,130,131,134,135,136,138,141,143,144,145,147,148,149,150,],[25,-52,-10,-11,-12,-13,-23,-23,-23,-21,-51,25,-23,-23,-5,-19,-22,-18,-20,-52,25,-26,-4,-10,-51,-52,-23,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,25,-24,25,-23,25,-9,-55,-57,-10,-16,-17,-58,-59,25,-23,-56,]),'EQ':([3,8,9,14,15,16,17,18,20,21,22,23,24,28,31,32,38,40,41,42,43,44,45,46,47,48,49,54,55,59,65,66,67,70,72,73,75,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,138,141,142,143,144,145,146,147,148,149,150,],[-23,-52,31,-10,-11,-12,-13,-23,-23,-23,-21,-22,-23,-23,-23,-5,-23,-23,-23,-19,-22,-23,-18,-20,-52,-23,-23,-26,80,-23,-26,80,-23,80,80,-23,-10,-22,-52,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,80,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,-23,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-23,-23,-23,-9,-55,-57,-10,-23,-16,-17,-58,80,-59,-23,-23,-56,]),'CLOSECURLY':([3,8,14,15,16,17,18,20,21,22,23,24,28,31,32,42,43,45,46,47,49,54,55,75,76,77,95,97,98,99,100,101,102,103,104,105,106,107,129,130,131,135,136,138,143,144,145,147,148,149,150,],[-23,30,-10,-11,-12,-13,-23,-23,-23,-21,-51,-23,-23,-23,-5,-19,-22,-18,-20,-52,-23,-26,-4,111,-51,-52,-23,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,-23,-24,-23,-23,-9,-55,-57,-16,-17,-58,-59,-23,-23,-56,]),'fin':([4,5,30,111,112,],[26,27,53,-60,-61,]),'OPENPAR':([7,11,12,13,25,108,109,137,],[29,38,40,41,48,132,133,142,]),'FLTLIT':([10,29,79,],[34,34,34,]),'DBLLIT':([10,29,79,],[35,35,35,]),'QUOTATION':([11,18,20,21,22,39,42,43,45,46,68,],[39,-23,-23,-23,-21,-23,-19,-22,-18,-20,105,]),'otro':([14,15,16,17,18,20,21,22,23,24,31,32,42,43,45,46,47,54,55,95,97,98,99,100,101,102,103,104,105,106,107,129,130,131,135,136,138,143,144,145,147,148,149,150,],[-10,-11,-12,-13,-23,-23,-23,-21,-51,-23,-23,-5,-19,-22,-18,-20,-52,-26,-4,-23,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,130,-24,-23,137,-9,-55,-57,-16,-17,-58,-59,-23,137,-56,]),'TILDE':([14,15,16,17,18,20,21,22,23,24,29,31,32,33,34,35,36,37,42,43,45,46,47,50,51,52,54,55,60,61,62,63,64,76,77,79,95,97,98,99,100,101,102,103,104,105,106,107,110,113,129,130,131,134,135,136,138,141,143,144,145,147,148,149,150,],[-10,-11,-12,-13,-23,-23,-23,-21,-51,-23,-23,-23,-5,-23,-23,-23,-23,-23,-19,-22,-18,-20,-52,78,-62,-64,-26,-4,97,98,99,100,101,-51,-52,-23,-23,-45,-46,-47,-48,-49,-6,-14,-15,-7,-8,-23,134,-63,-24,-23,-23,-23,-9,-55,-57,145,-16,-17,-58,-59,-23,-23,-56,]),'<':([18,20,21,22,31,38,40,41,42,43,44,45,46,48,54,55,59,65,66,67,70,72,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,146,],[-23,-23,-23,-21,-23,-23,-23,-23,-19,-22,-23,-18,-20,-23,-26,81,-23,-26,81,-23,81,81,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-23,81,]),'>':([18,20,21,22,31,38,40,41,42,43,44,45,46,48,54,55,59,65,66,67,70,72,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,146,],[-23,-23,-23,-21,-23,-23,-23,-23,-19,-22,-23,-18,-20,-23,-26,82,-23,-26,82,-23,82,82,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-23,82,]),'LT':([18,20,21,22,31,38,40,41,42,43,44,45,46,48,54,55,59,65,66,67,70,72,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,146,],[-23,-23,-23,-21,-23,-23,-23,-23,-19,-22,-23,-18,-20,-23,-26,83,-23,-26,83,-23,83,83,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-23,83,]),'GT':([18,20,21,22,31,38,40,41,42,43,44,45,46,48,54,55,59,65,66,67,70,72,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,146,],[-23,-23,-23,-21,-23,-23,-23,-23,-19,-22,-23,-18,-20,-23,-26,84,-23,-26,84,-23,84,84,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-23,84,]),'=':([18,20,21,22,31,38,40,41,42,43,44,45,46,48,54,55,59,65,66,67,70,72,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,146,],[-23,-23,-23,-21,-23,-23,-23,-23,-19,-22,-23,-18,-20,-23,-26,85,-23,-26,85,-23,85,85,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-23,85,]),'NEQ':([18,20,21,22,31,38,40,41,42,43,44,45,46,48,54,55,59,65,66,67,70,72,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,146,],[-23,-23,-23,-21,-23,-23,-23,-23,-19,-22,-23,-18,-20,-23,-26,86,-23,-26,86,-23,86,86,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-23,86,]),'!':([18,20,21,22,31,38,40,41,42,43,44,45,46,48,54,55,59,65,66,67,70,72,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,146,],[-23,-23,-23,-21,-23,-23,-23,-23,-19,-22,-23,-18,-20,-23,-26,87,-23,-26,87,-23,87,87,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-23,87,]),'OR':([18,20,21,22,31,38,40,41,42,43,44,45,46,48,54,55,59,65,66,67,70,72,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,146,],[-23,-23,-23,-21,-23,-23,-23,-23,-19,-22,-23,-18,-20,-23,-26,88,-23,-26,88,-23,88,88,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-23,88,]),'AND':([18,20,21,22,31,38,40,41,42,43,44,45,46,48,54,55,59,65,66,67,70,72,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,146,],[-23,-23,-23,-21,-23,-23,-23,-23,-19,-22,-23,-18,-20,-23,-26,89,-23,-26,89,-23,89,89,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-23,89,]),'+':([18,20,21,22,31,38,40,41,42,43,44,45,46,48,54,55,59,65,66,67,70,72,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,146,],[-23,-23,-23,-21,-23,-23,-23,-23,-19,-22,-23,-18,-20,-23,-26,90,-23,-26,90,-23,90,90,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-23,90,]),'-':([18,20,21,22,31,38,40,41,42,43,44,45,46,48,54,55,59,65,66,67,70,72,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,146,],[-23,-23,-23,-21,-23,-23,-23,-23,-19,-22,-23,-18,-20,-23,-26,91,-23,-26,91,-23,91,91,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-23,91,]),'*':([18,20,21,22,31,38,40,41,42,43,44,45,46,48,54,55,59,65,66,67,70,72,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,146,],[-23,-23,-23,-21,-23,-23,-23,-23,-19,-22,-23,-18,-20,-23,-26,92,-23,-26,92,-23,92,92,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-23,92,]),'/':([18,20,21,22,31,38,40,41,42,43,44,45,46,48,54,55,59,65,66,67,70,72,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,146,],[-23,-23,-23,-21,-23,-23,-23,-23,-19,-22,-23,-18,-20,-23,-26,93,-23,-26,93,-23,93,93,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-23,93,]),'%':([18,20,21,22,31,38,40,41,42,43,44,45,46,48,54,55,59,65,66,67,70,72,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,146,],[-23,-23,-23,-21,-23,-23,-23,-23,-19,-22,-23,-18,-20,-23,-26,94,-23,-26,94,-23,94,94,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-23,94,]),'CLOSEPAR':([18,20,21,22,38,42,43,45,46,54,57,58,59,65,66,67,69,71,74,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,139,140,142,146,],[-23,-23,-23,-21,-23,-19,-22,-18,-20,-26,-27,-28,-23,102,103,104,106,107,110,112,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,143,144,-23,148,]),'COMMA':([18,20,21,22,42,43,45,46,51,54,56,57,58,59,69,71,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,],[-23,-23,-23,-21,-19,-22,-18,-20,79,-26,95,-27,-28,-23,95,95,95,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-24,-45,-46,-47,-48,-49,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,]),'ASSIGN':([19,],[44,]),'NOT':([31,38,40,41,44,48,59,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,142,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'romperse':([145,],[147,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main_program':([0,],[1,]),'classes':([2,],[4,]),'function_heading':([2,],[5,]),'statements':([3,24,49,107,130,134,148,],[8,47,77,131,135,77,149,]),'identifier_list':([3,18,20,21,24,28,31,33,34,35,36,37,38,39,40,41,44,48,49,59,67,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,107,130,134,142,148,],[9,42,45,46,9,49,54,60,61,62,63,64,65,68,54,54,54,54,9,54,42,42,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,9,9,9,54,9,]),'optional_statements':([3,24,49,107,130,134,148,],[14,14,75,14,14,141,14,]),'if':([3,24,49,107,130,134,148,],[15,15,15,15,15,15,15,]),'while':([3,24,49,107,130,134,148,],[16,16,16,16,16,16,16,]),'empty':([3,18,20,21,24,28,29,31,33,34,35,36,37,38,39,40,41,44,48,49,59,67,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,107,130,131,134,142,148,149,],[23,43,43,43,23,43,52,43,43,43,43,43,43,43,43,43,43,43,43,76,43,43,43,52,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,23,23,138,76,43,23,138,]),'statement_list':([3,24,49,107,130,134,148,],[24,24,24,24,24,24,24,]),'type':([10,29,79,],[32,51,51,]),'parameters':([29,79,],[50,113,]),'expression':([31,38,40,41,44,48,59,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,142,],[55,66,70,70,72,70,96,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,146,]),'expression_list':([31,38,40,41,44,48,59,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,142,],[56,56,69,71,56,74,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'logical_expression':([31,38,40,41,44,48,59,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,142,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'arithmetic_expression':([31,38,40,41,44,48,59,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,142,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'else_if':([131,149,],[136,150,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main_program","S'",1,None,None,None),
  ('main_program -> comienzo OPENCURLY statements CLOSECURLY fin','main_program',5,'p_main_program','parser.py',12),
  ('main_program -> comienzo classes fin','main_program',3,'p_main_program','parser.py',13),
  ('main_program -> comienzo function_heading fin','main_program',3,'p_main_program','parser.py',14),
  ('statements -> identifier_list EQ expression','statements',3,'p_statements','parser.py',18),
  ('statements -> introducir type','statements',2,'p_statements','parser.py',19),
  ('statements -> imprimir OPENPAR identifier_list CLOSEPAR','statements',4,'p_statements','parser.py',20),
  ('statements -> imprimir QUOTATION identifier_list QUOTATION','statements',4,'p_statements','parser.py',21),
  ('statements -> regresso OPENPAR expression_list CLOSEPAR','statements',4,'p_statements','parser.py',22),
  ('statements -> si OPENPAR expression_list CLOSEPAR otro statements','statements',6,'p_statements','parser.py',23),
  ('statements -> optional_statements','statements',1,'p_statements','parser.py',24),
  ('statements -> if','statements',1,'p_statements','parser.py',25),
  ('statements -> while','statements',1,'p_statements','parser.py',26),
  ('statements -> COMMENT','statements',1,'p_statements','parser.py',27),
  ('statements -> imprimir OPENPAR expression CLOSEPAR','statements',4,'p_statement_print','parser.py',31),
  ('statements -> imprimir OPENPAR STRLIT CLOSEPAR','statements',4,'p_statement_print_string','parser.py',35),
  ('statements -> VAR ASSIGN expression imprimir OPENPAR VAR CLOSEPAR','statements',7,'p_statement_print_var','parser.py',39),
  ('statements -> VAR ASSIGN STRLIT imprimir OPENPAR VAR CLOSEPAR','statements',7,'p_statement_print_var_string','parser.py',43),
  ('identifier_list -> CHRLIT identifier_list','identifier_list',2,'p_identifier_list','parser.py',50),
  ('identifier_list -> STRLIT identifier_list','identifier_list',2,'p_identifier_list','parser.py',51),
  ('identifier_list -> INTLIT identifier_list','identifier_list',2,'p_identifier_list','parser.py',52),
  ('identifier_list -> UNDERSCORE','identifier_list',1,'p_identifier_list','parser.py',53),
  ('identifier_list -> empty','identifier_list',1,'p_identifier_list','parser.py',54),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',59),
  ('expression -> expression','expression',1,'p_expression','parser.py',65),
  ('expression -> expression_list COMMA expression','expression',3,'p_expression','parser.py',66),
  ('expression -> identifier_list','expression',1,'p_expression','parser.py',67),
  ('expression_list -> logical_expression','expression_list',1,'p_expression_list','parser.py',71),
  ('expression_list -> arithmetic_expression','expression_list',1,'p_expression_list','parser.py',72),
  ('logical_expression -> expression < expression','logical_expression',3,'p_logical_expression','parser.py',76),
  ('logical_expression -> expression > expression','logical_expression',3,'p_logical_expression','parser.py',77),
  ('logical_expression -> expression LT expression','logical_expression',3,'p_logical_expression','parser.py',78),
  ('logical_expression -> expression GT expression','logical_expression',3,'p_logical_expression','parser.py',79),
  ('logical_expression -> expression = expression','logical_expression',3,'p_logical_expression','parser.py',80),
  ('logical_expression -> expression NEQ expression','logical_expression',3,'p_logical_expression','parser.py',81),
  ('logical_expression -> expression EQ expression','logical_expression',3,'p_logical_expression','parser.py',82),
  ('logical_expression -> expression ! expression','logical_expression',3,'p_logical_expression','parser.py',83),
  ('logical_expression -> expression OR expression','logical_expression',3,'p_logical_expression','parser.py',84),
  ('logical_expression -> expression AND expression','logical_expression',3,'p_logical_expression','parser.py',85),
  ('logical_expression -> NOT expression','logical_expression',2,'p_logical_expression','parser.py',86),
  ('arithmetic_expression -> expression + expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',109),
  ('arithmetic_expression -> expression - expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',110),
  ('arithmetic_expression -> expression * expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',111),
  ('arithmetic_expression -> expression / expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',112),
  ('arithmetic_expression -> expression % expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',113),
  ('type -> INTLIT identifier_list TILDE','type',3,'p_type','parser.py',128),
  ('type -> FLTLIT identifier_list TILDE','type',3,'p_type','parser.py',129),
  ('type -> DBLLIT identifier_list TILDE','type',3,'p_type','parser.py',130),
  ('type -> CHRLIT identifier_list TILDE','type',3,'p_type','parser.py',131),
  ('type -> STRLIT identifier_list TILDE','type',3,'p_type','parser.py',132),
  ('optional_statements -> statement_list','optional_statements',1,'p_optional_statements','parser.py',138),
  ('optional_statements -> empty','optional_statements',1,'p_optional_statements','parser.py',139),
  ('statement_list -> statements','statement_list',1,'p_statement_list','parser.py',144),
  ('statement_list -> statement_list statements','statement_list',2,'p_statement_list','parser.py',145),
  ('if -> si OPENPAR expression_list CLOSEPAR statements','if',5,'p_if','parser.py',150),
  ('if -> si OPENPAR expression_list CLOSEPAR statements else_if','if',6,'p_if','parser.py',151),
  ('else_if -> otro OPENPAR expression CLOSEPAR statements else_if','else_if',6,'p_else_if','parser.py',156),
  ('else_if -> empty','else_if',1,'p_else_if','parser.py',157),
  ('while -> mientras OPENPAR expression_list CLOSEPAR TILDE optional_statements TILDE','while',7,'p_while','parser.py',162),
  ('while -> mientras OPENPAR expression_list CLOSEPAR TILDE optional_statements TILDE romperse','while',8,'p_while','parser.py',163),
  ('classes -> clase OPENCURLY identifier_list optional_statements CLOSECURLY','classes',5,'p_classes','parser.py',168),
  ('function_heading -> explicar OPENPAR parameters TILDE CLOSEPAR','function_heading',5,'p_function_heading','parser.py',173),
  ('parameters -> type','parameters',1,'p_parameters','parser.py',177),
  ('parameters -> type COMMA parameters','parameters',3,'p_parameters','parser.py',178),
  ('parameters -> empty','parameters',1,'p_parameters','parser.py',179),
]
